{"version":3,"file":"static/development/pages/home.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ResultCard.js","webpack:///./pages/home.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-styled-flexboxgrid\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/* Third Party */\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport React from 'react'\nimport { Row, Col } from 'react-styled-flexboxgrid'\n\nconst ResultCardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 1rem;\n`\nconst ResultCardBody = styled.div`\n    border-bottom: 1px solid lightgray;\n    padding: 0.5rem;\n    width: 100%;\n`\n\nconst MarginedRow = styled(Row)`\n    // margin-top: 0.5rem;\n`\n\nconst Title = styled.h4`\n    color: black;\n    font-size: 1.3rem;\n    font-weight: lighter;\n    margin-top: 0.2rem;\n    margin-bottom: 0rem;\n    margin-left: 1rem;\n`\n\nconst ReleaseDate = styled(Title)`\n    color: gray;\n    font-size: 0.8rem;\n    margin-top: 0rem;\n    margin-bottom: 0.6rem;\n    margin-left: 3.7rem;\n`\n\nconst Description = styled(ReleaseDate)`\n    color: black;\n    display: none;\n    line-height: 1.5rem;\n    font-size: 1rem;\n    width: 40rem;\n`\n\nexport default class ResultCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            viewDescription: true\n        }\n    }\n\n    toggleDescription = () => {\n        this.setState({\n            viewDescription: !this.state.viewDescription\n        })\n    }\n\n    render () {\n        const { film } = this.props\n        const { toggleDescription } = this\n        const { viewDescription } = this.state\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const date = new Date(film.release_date)\n        const year = date.getFullYear()\n        const day = date.getDate()\n        const month = months[date.getMonth()]\n        const dayOfWeek = daysOfWeek[date.getDay()]\n        const dateString = `${dayOfWeek}, ${month} ${day} ${year}`\n        return (\n            <ResultCardContainer>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n                <ResultCardBody> \n                    <Row>\n                        <Col>\n                            <MarginedRow>\n                                <i className='material-icons' style={{fontSize: 40}}>movie</i>\n                                <Title> {film.title} </Title>\n                            </MarginedRow>\n                            <Row>\n                                <ReleaseDate> Release: {dateString} </ReleaseDate>\n                            </Row>\n                            <Row>\n                                <Description onClick={toggleDescription}>+ here</Description>\n                                {/* { viewDescription && <Description> {film.opening_crawl} </Description> } */}\n                            </Row>\n                        </Col>\n                    </Row>\n                </ResultCardBody>\n            </ResultCardContainer>\n        )\n    }\n}\n\nResultCard.defaultProps = {\n   film: {},\n}\n\nResultCard.propTypes = {\n    film: PropTypes.object,\n}","/* First party */\nimport { Component } from 'react'\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid'\nimport styled from 'styled-components'\n\n/* Third party */\nimport data from '../characters.json'\nimport ResultCard from '../components/ResultCard'\n\nconst Container = styled.div`\n    margin: 0 auto;\n`\n\nconst Title = styled.h1`\n    font-size: 2.5rem;\n    margin-bottom: 2rem;\n    text-align: center;\n`\n\nconst Name = styled.p`\n    color: ${props => props.isCurrentCharacter ? 'black' : 'gray'};\n    font-size: 1.2rem;\n    margin-bottom: 0.2em;\n    text-align: center;\n    vertical-align: middle;\n\n    &:hover {\n        transition: color 4s easein;\n        transition: border 2s ease;\n        color: black;\n        cursor: pointer;\n    }\n`\n\nconst NameUnderline = styled.hr`\n    border-top: 1px solid black;\n    width: ${props => props.isCurrentCharacter ? '200px' : '0px'};\n    transition: width 0.5s;\n\n    ${Name}:hover & {\n        width: 200px;\n    }\n`\n\nconst Theme = styled(Grid)`\n    font-family: 'NeueHaasUnicaPro-Regular';\n    padding: 5rem;\n    padding-top: 1rem;\n`\n\nconst MarginedRow = styled(Row)`\n    margin-bottom: 2rem;\n`\n\nconst EmptyState = styled.p`\n    font-size: 1.2rem;\n    margin: 5rem;\n`\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            films: [],\n            selectedCharacter: '',\n            status: 'SETTLED'\n        }\n    }\n\n    handleCharacterNameClick = (name, reqUrl) => {\n        this.setState({\n            films: [],\n            selectedCharacter: name,\n            status: 'PENDING'\n        })\n        this.fetchFilms(reqUrl)\n        \n    }\n\n    async fetchFilms (reqUrl) {\n        fetch(reqUrl)\n        .then(res => {\n            if (!res.ok) {\n                this.setState({\n                    status: 'SETTLED'\n                })\n                throw Error(res.status)\n            } else {\n                return res.json()\n            }\n        })\n        .then(data => {\n            const filmUrls = data.films\n            filmUrls && filmUrls.map(url => {\n                fetch(url)\n                .then(res => res.json())\n                .then(filmData => {\n                    this.setState({\n                        films: [...this.state.films, filmData],\n                        status: 'SETTLED'\n                    })\n                })\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render () {\n        const { handleCharacterNameClick } = this\n        const { films, status, selectedCharacter } = this.state\n        return (\n            <Container>\n                <Theme>\n                    <Title> characters and films </Title>\n                    <MarginedRow start='xs'>\n                    { data.characters.map((char, i) => {\n                        return (\n                            <Col key={i} xs={12} sm={6} md={3}>\n                                <Name \n                                    isCurrentCharacter={char.name===selectedCharacter}\n                                    onClick={() => handleCharacterNameClick(char.name, char.url)}>\n                                    {char.name} \n                                    <NameUnderline isCurrentCharacter={char.name===selectedCharacter}/>  \n                                </Name>\n                            </Col>\n                        )\n                    })}\n                    </MarginedRow>\n                    <Row start='xs'>\n                        <Col xsOffset={1}>\n                        { films.length > 0\n                        ? status==='SETTLED' && films.map((film, i) => {\n                            return (\n                                <Row key={i}>\n                                    <Col>\n                                        <ResultCard\n                                            film={film}\n                                        />\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                        : status==='SETTLED' && selectedCharacter &&\n                            <Row>\n                                <Col>\n                                    <EmptyState> Sorry, there is an error or this character is not in any films. </EmptyState> \n                                </Col>\n                            </Row>\n                        }\n                        </Col>\n                    </Row>\n                </Theme>\n            </Container>\n        )\n    }\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-styled-flexboxgrid\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAMA;AAIA;AASA;AAQA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AADA;AAGA;AACA;AAVA;AACA;AADA;AAFA;AAKA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAlDA;AACA;AADA;AAqDA;AACA;AADA;AAIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAIA;AAMA;AACA;AAAA;AAcA;AAEA;AAAA;AAQA;AAMA;AAIA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAEA;AACA;AAhBA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;;;;AAWA;;;;;;;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAhGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}