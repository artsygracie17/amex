{"version":3,"file":"static/webpack/static/development/pages/home.js.dfbf5d7387d480cf58d9.hot-update.js","sources":["webpack:///./components/ResultCard.js"],"sourcesContent":["/* Third Party */\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport React from 'react'\nimport { Row, Col } from 'react-styled-flexboxgrid'\n\nconst ResultCardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 1rem;\n`\nconst ResultCardBody = styled.div`\n    border-bottom: 1px solid lightgray;\n    padding: 0.5rem;\n    width: 100%;\n`\n\nconst MarginedRow = styled(Row)`\n    // margin-top: 0.5rem;\n`\n\nconst Title = styled.h4`\n    color: black;\n    font-size: 1.3rem;\n    font-weight: lighter;\n    margin-top: 0.2rem;\n    margin-bottom: 0rem;\n    margin-left: 1rem;\n`\n\nconst ReleaseDate = styled(Title)`\n    color: gray;\n    font-size: 0.8rem;\n    margin-top: 0rem;\n    margin-bottom: 0.6rem;\n    margin-left: 3.7rem;\n`\n\nconst Description = styled(ReleaseDate)`\n    color: black;\n    display: none;\n    line-height: 1.5rem;\n    font-size: 1rem;\n    width: 40rem;\n`\n\nexport default class ResultCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            viewDescription: true\n        }\n    }\n\n    toggleDescription = () => {\n        this.setState({\n            viewDescription: !this.state.viewDescription\n        })\n    }\n\n    render () {\n        const { film } = this.props\n        const { toggleDescription } = this\n        const { viewDescription } = this.state\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const date = new Date(film.release_date)\n        const year = date.getFullYear()\n        const day = date.getDate()\n        const month = months[date.getMonth()]\n        const dayOfWeek = daysOfWeek[date.getDay()]\n        const dateString = `${dayOfWeek}, ${month} ${day} ${year}`\n        return (\n            <ResultCardContainer>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n                <ResultCardBody> \n                    <Row>\n                        <Col>\n                            <MarginedRow>\n                                <i className='material-icons' style={{fontSize: 40}}>movie</i>\n                                <Title> {film.title} </Title>\n                            </MarginedRow>\n                            <Row>\n                                <ReleaseDate> Release: {dateString} </ReleaseDate>\n                            </Row>\n                            <Row>\n                                <Description onClick={toggleDescription}>+ here</Description>\n                                {/* { viewDescription && <Description> {film.opening_crawl} </Description> } */}\n                            </Row>\n                        </Col>\n                    </Row>\n                </ResultCardBody>\n            </ResultCardContainer>\n        )\n    }\n}\n\nResultCard.defaultProps = {\n   film: {},\n}\n\nResultCard.propTypes = {\n    film: PropTypes.object,\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAMA;AAIA;AASA;AAQA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AADA;AAGA;AACA;AAVA;AACA;AADA;AAFA;AAKA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAlDA;AACA;AADA;AAqDA;AACA;AADA;AAIA;AACA;AADA;;;;A","sourceRoot":""}