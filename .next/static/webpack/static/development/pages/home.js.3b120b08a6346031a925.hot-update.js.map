{"version":3,"file":"static/webpack/static/development/pages/home.js.3b120b08a6346031a925.hot-update.js","sources":["webpack:///./pages/home.js"],"sourcesContent":["/* First party */\nimport { Component } from 'react'\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid'\nimport styled from 'styled-components'\n\n/* Third party */\nimport data from '../characters.json'\nimport ResultCard from '../components/ResultCard'\n\nconst colors = {\n    coffee: '#bfb3a8',\n    darkCoffee: '#907a67'\n}\n\nconst Container = styled.div`\n    margin: 0 auto;\n`\n\nconst CharacterCard = styled.div`\n    border: 1px solid ${colors.coffee};\n    border-radius: 10rem;\n    height: 5rem;\n    margin-top: 2rem;\n    padding: 2rem;\n    text-align: center;\n    vertical-align: middle;\n    width: 5rem;\n\n    &:hover {\n        color: ${colors.darkCoffee};\n        cursor: pointer;\n    }\n`\n\nconst Name = styled.p`\n    color: ${colors.coffee};\n    font-size: 1.2rem;\n    margin-top: 1.2rem;\n\n    ${CharacterCard}:hover & {\n        color: ${colors.darkCoffee};\n    }\n`\n\nconst Theme = styled(Grid)`\n    font-family: 'NeueHaasUnicaPro-Regular';\n`\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedCharacter: {},\n            films: []\n        }\n    }\n\n    handleCharacterCardClick = (name) => {\n        console.log('in handleclick: ', name)\n        // update selectedCharacter state\n        // fetch films that character has been in\n        // update films state\n    }\n    \n    render () {\n        console.log('data: ', data.characters)\n        const { handleCharacterCardClick } = this\n        return (\n            <Container>\n                <Theme>\n                    {/* <HeaderRow center='xs'>\n                        <Title> Select a character to see their featured films </Title>\n                    </HeaderRow> */}\n                    <Row center='xs'>\n                        <Col xs={3}>\n                            <Row>\n                            { data.characters.map((char, i) => {\n                                return (\n                                    <Col key={i}>\n                                        <CharacterCard onClick={() => handleCharacterCardClick(char.name)}>\n                                            <Name> {char.name} </Name>\n                                        </CharacterCard>\n                                            \n                                    </Col>\n                                )\n                            })}\n                            </Row>\n                        </Col>\n                        <Col xs={9}>\n                        <Row>\n                            { data.characters.map((char, i) => {\n                                return (\n                                    <Col key={i}>\n                                        <ResultCard/>\n                                            \n                                    </Col>\n                                )\n                            })}\n                            </Row>\n                        </Col>\n                    </Row>\n                </Theme>\n            </Container>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAIA;AAgxDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}